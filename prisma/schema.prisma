generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int         @id @default(autoincrement())
  name         String?
  email        String      @unique
  passwordHash String?
  picks        Pick[]
  payments     Payment[]
  
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model Competition {
  id         Int       @id @default(autoincrement())
  title      String
  entryFee   Decimal   @db.Decimal(10, 2)
  startDate  DateTime
  status     String    // 'active', 'completed'
  prizePot   Decimal   @db.Decimal(10, 2)
  rolledOver Boolean   @default(false)
  rounds     Round[]
  payments   Payment[]
  
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Round {
  id              Int         @id @default(autoincrement())
  competition     Competition @relation(fields: [competitionId], references: [id])
  competitionId   Int
  roundNumber     Int
  deadlineDate    DateTime
  picks           Pick[]
  freeHitPayments Payment[]   @relation("FreeHitRound")
  
  @@index([competitionId])
}

model Pick {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  round     Round    @relation(fields: [roundId], references: [id])
  roundId   Int
  teamId    Int
  status    String   // Consider using enum for this too
  timestamp DateTime @default(now())
  
  @@index([userId])
  @@index([roundId])
}

model Team {
  id         Int     @id @default(autoincrement())
  name       String
  league     String
  externalId String? // For mapping to external API
  
  @@unique([externalId])
}

model Payment {
  id              Int         @id @default(autoincrement())
  user            User        @relation(fields: [userId], references: [id])
  userId          Int
  competition     Competition @relation(fields: [competitionId], references: [id])
  competitionId   Int
  amount          Decimal     @db.Decimal(10, 2)
  paymentStatus   String
  paymentType     String      // 'entry', 'rebuy', 'free_hit'
  freeHitRound    Round?      @relation("FreeHitRound", fields: [freeHitRoundId], references: [id])
  freeHitRoundId  Int?
  freeHitUsed     Boolean     @default(false)
  createdAt       DateTime    @default(now())
  
  @@index([userId])
  @@index([competitionId])
  @@index([freeHitRoundId])
}